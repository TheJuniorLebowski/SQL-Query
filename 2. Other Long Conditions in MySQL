

1. Query the two cities in STATION with the shortest and longest CITY names, as well as their respective lengths (i.e.: number of characters in the name). 
If there is more than one smallest or largest city, choose the one that comes first when ordered alphabetically. Table name is Station
    
    SELECT s.CITY, LENGTH(s.CITY) from Station s ORDER BY LENGTH(s.CITY) DESC, s.CITY ASC LIMIT 1;
    SELECT s.CITY, LENGTH(s.CITY) from Station s ORDER BY LENGTH(s.CITY) ASC, s.CITY ASC LIMIT 1;

2. Query the list of CITY names from STATION table starting with vowels (i.e., a, e, i, o, or u) from table Your result cannot contain duplicates.
            
            SELECT DISTINCT(CITY) FROM STATION WHERE CITY REGEXP '^[aeiouAEIOU]';
            
3. Query the list of CITY names from STATION that either do not start with vowels or do not end with vowels. Your result cannot contain duplicates.
            
            SELECT DISTINCT(CITY) FROM STATION WHERE CITY NOT REGEXP '^[aeiouAEIOU]' OR CITY NOT REGEXP '[aeiouAEIOU]$';



4. Find the difference between the total number of CITY entries in the table and the number of distinct CITY entries in the STation table.
           
           SELECT COUNT(CITY)- COUNT(DISTINCT(CITY)) from STATION;


5. Query the Name of any student in STUDENTS who scored higher than  Marks. Order your output by the last three characters of each name. If two or 
more students both have names ending in the same last three characters (i.e.: Bobby, Robby, etc.), secondary sort them by ascending ID.


                SELECT NAME from STUDENTS WHERE Marks > 75 ORDER BY RIGHT(NAME, 3) ASC, ID ASC;




























